page: output_win32
    type: pm
    output_dir: lib/MyDef
    ext: c
    init_mode: sub
    package: MyDef::output_win32

    subcode: main
	$(export:C=MyDef::output_c::)
	use MyDef::output_c;

	$sub get_interface
	    return (\&init_page, \&$(C)parsecode, \&$(C)set_output, \&$(C)modeswitch, \&dumpout);

	$sub init_page
	    my @ret = $(C)init_page(@_)
	    $call @on_init
	    return @ret

	$sub dumpout
	    my ($f, $out)=@_;
	    $call @on_dumpout
	    push @$f, "#define _CRT_SECURE_NO_WARNINGS\n"
	    push @$f, "#define WIN32_LEAN_AND_MEAN\n"
	    push @$f, "#include <windows.h>\n";
	    $foreach $i in keys %$(C)objects
		$if $i=~/^lib(.*)/
		    push @$f, "#pragma comment(lib, \"$1\")\n"
		    $$(C)objects{$i}=undef
	    $(C)dumpout($f, $out)

	1;

subcode:: on_init
    $(C)global_add_symbol("cur_instance", "HINSTANCE")

subcode:: on_dumpout
    my $extern
    # ----  Main Function -------------------
    my $func=$$(C)functions{"WinMain"};
    $if $func
	$func->{skip_declare}=1;
	$func->{ret_type}="int APIENTRY";
	$func->{param_list}=["HINSTANCE hInst", "HINSTANCE hPrev", "LPSTR s_cmdline", "int n_cmdshow"];
	push @{$func->{init}}, "cur_instance=hInst;";
	push @{$func->{init}}, "DUMP_STUB main_init";
	push @{$func->{finish}}, "DUMP_STUB main_exit";
	push @{$func->{finish}}, "return 0;";
    $else
	$extern="extern "

    push @$(C)global_list, "cur_instance"
    $$(C)global_hash->{cur_instance}= $extern."HINSTANCE cur_instance"
