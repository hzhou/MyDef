subcode:: support_subs
    $sub sql_exec
	my $out=shift;
	push @$out, "\$r=mysql_query(\$sql, \$$MyDef::var->{usedb});";
	push @$out, "if(!\$r){\$errors[]='Database Error'; \$tpage=addslashes(\$_SERVER['PHP_SELF']);\$tsql=addslashes(\$sql);mysql_query(\"INSERT INTO log_errsql (errsql,page) VALUES ('\$tsql', '\$tpage)'\", \$$MyDef::var->{usedb});}";
	push @$out, "if(!\$r){\$infos[]=\"ErrSQL: \$sql\";}";
	if($MyDef::page->{'show_sql'}){ push @$out, "\$infos[]='sql: '.\$sql;"; }

    $sub sql_parse_var
	my $t=shift;
	my ($varname, $colname);
	$if $t=~/^([^(]*)\((.*)\)$/
	    $varname=$1;
	    $colname=$2;
	$else
	    $varname=$t;
	    $colname=$t;
	return ($varname, $colname);

    $sub sql_update
	my ($out, $use_cache, $head, $param, $tail)=@_;
	my @flist=split /,\s*/, $param;
	my $fields=$MyDef::def->{fields};
	my @sqlsegs;
	$foreach $f in @flist
	    $if $f=~/(.*)=(.*)/
		push @sqlsegs, $f;
	    $else
		my ($varname, $colname);
		$if $f=~/^(.*)\((.*)\)$/
		    $varname=$1;
		    $colname=$2;
		$else
		    $varname=$f;
		    $colname=$f;
		my $ff=$fields->{$varname};
		my $type=getfieldtype($ff, $colname);
		if($type =~/^(int|uint|boolean)$/){
		    push @$out, "if(is_numeric(\$$varname)){";
		    push @$out, "    \$t_$varname=\$$varname;";
		    push @$out, "}else{";
		    push @$out, "    \$t_$varname=\"NULL\";";
		    push @$out, "}";
		    push @sqlsegs, "$colname=\$t_$varname";
		}
		elsif($type eq 'date'){
		    push @$out, "if(\$$varname){";
		    push @$out, "    \$t_$varname=\"'\".\$$varname.\"'\";";
		    push @$out, "}else{";
		    push @$out, "    \$t_$varname=\"NULL\";";
		    push @$out, "}";
		    push @sqlsegs, "$colname=\$t_$varname";
		}
		elsif($type eq 'now'){
		    push @sqlsegs, "$colname=NOW()";
		}
		elsif($type eq 'today' or $type eq 'curdate'){
		    push @sqlsegs, "$colname=CURDATE()";
		}
		else{
		    if($ff->{null_on_empty}){
			push @$out, "if(\$$varname){";
			push @$out, "    \$t_$varname=\"'\".addslashes(\$$varname).\"'\";";
			push @$out, "}";
			push @$out, "else{";
			push @$out, "    \$t_$varname='NULL';";
			push @$out, "}";
			push @sqlsegs, "$colname=\$t_$varname";
		    }
		    else{
			push @$out, "\$t_$varname=addslashes(\$$varname);";
			push @sqlsegs, "$colname='\$t_$varname'";
		    }
		}
	push @$out, "\$sql = \"$head ".join(', ', @sqlsegs)." $tail\";";
	sql_exec($out);

    sub sql_insert {
	my ($out, $head, $param)=@_;
	my @flist=split /,\s*/, $param;
	my $fields=$MyDef::def->{fields};
	my (@sqlnames, @sqlsegs);
	foreach my $f (@flist){
	    if($f=~/(.*)=(.*)/){
		push @sqlnames, $1;
		push @sqlsegs, $2;
	    }
	    else{
		my ($varname, $colname);
		if($f=~/^(.*)\((.*)\)$/){
		    $varname=$1;
		    $colname=$2;
		}
		else{
		    $varname=$f;
		    $colname=$f;
		}
		if($item){
		    push @$out, "\$$varname=\$i['$varname'];";
		}
		my $ff=$fields->{$varname};
		my $type=getfieldtype($ff, $colname);
		push @sqlnames, $colname;
		if($type =~/^(int|uint|boolean)$/){
		    push @$out, "if(is_numeric(\$$varname)){";
		    push @$out, "    \$t_$varname=\$$varname;";
		    push @$out, "}else{";
		    push @$out, "    \$t_$varname=\"NULL\";";
		    push @$out, "}";
		    push @sqlsegs, "\$t_$varname";
		}
		elsif($type eq 'date'){
		    push @$out, "if(\$$varname){";
		    push @$out, "    \$t_$varname=\"'\".\$$varname.\"'\";";
		    push @$out, "}else{";
		    push @$out, "    \$t_$varname=\"NULL\";";
		    push @$out, "}";
		    push @sqlsegs, "\$t_$varname";
		}
		elsif($type eq 'curdate' or $type eq 'today'){
		    push @sqlsegs, "CURDATE()";
		}
		elsif($type eq 'now'){
		    push @sqlsegs, "NOW()";
		}
		else{
		    push @$out, "\$t_$varname=addslashes(\$$varname);";
		    push @sqlsegs, "'\$t_$varname'";
		}
	    }
	}
	push @$out, "\$sql = \"$head (".join(', ', @sqlnames).") VALUES (".join(', ', @sqlsegs).")\";";
	sql_exec($out);
    }

    $sub sql_select 
	my ($out, $flist, $tail)=@_;
	my @sqlnames;
	foreach my $f (@$flist){
	    my ($varname, $colname)=sql_parse_var($f);
	    push @sqlnames, "$colname";
	}
	push @$out, '$sql = "SELECT '.join(', ', @sqlnames). " $tail\";";
	sql_exec($out);

    sub sql_select_one {
	my ($out, $param, $tail)=@_;
	my $fields=$MyDef::def->{fields};
	my @flist=split /,\s*/, $param;

	my @sqlnames;
	my @assignments;
	my $varname;
	my $colname;
	my $i=0;
	foreach my $f (@flist){
	    my ($varname, $colname)=sql_parse_var($f);
	    $ff=$fields->{$varname};
	    $type=getfieldtype($ff, $colname);
	    push @sqlnames, $colname;
	    push @assignments, "        \$$varname=\$row[$i];";
	    $i++;
	}
	push @$out, '$sql = "SELECT '.join(', ', @sqlnames). " $tail\";";
	sql_exec($out);
	# -------------------------------------
	push @$out, "if(\$r){\$row=mysql_fetch_row(\$r);}";
	push @$out, "if(!\$row){\$empty=1;}";
	push @$out, "else{";
	push @$out, "    \$empty=0;";
	foreach my $l (@assignments){
	    push @$out, $l;
	}
	push @$out, "}";
    }

    sub sql_select_count {
	my ($out, $use_cache, $param, $name)=@_;
	my $countname="count";
	if($name){$countname=$name."_count";}
	push @$out, "\$sql=\"SELECT count(*) $param\";";
	if($use_cache){
	    push @$out, "\$cache_sql=\"SELECT result FROM sql_cache WHERE `sql`='\".addslashes(\$sql).\"' AND timestamp>DATE_SUB(CURDATE(), INTERVAL 1 DAY)\";";
	    push @$out, "\$r=mysql_query(\$cache_sql, \$$MyDef::var->{usedb});";
	    if($MyDef::page->{'show_sql'}){ push @$out, "\$infos[]='sql: '.\$cache_sql;"; }
	    push @$out, "if(\$r){\$row=mysql_fetch_row(\$r);}";
	    push @$out, "if(\$row){";
		push @$out, "\$$countname=\$row[0];";
	    push @$out, "}";
	    push @$out, "else{";
	}

	sql_exec($out);
	push @$out, "if(\$r){";
	push @$out, "\$row=mysql_fetch_row(\$r);";
	push @$out, "\$$countname=\$row[0];";
	push @$out, "}";

	if($use_cache){
	    push @$out, "mysql_query(\"REPLACE INTO sql_cache (`sql`, result) VALUES ('\".addslashes(\$sql).\"', '\$$countname')\", \$$MyDef::var->{usedb});";
	    push @$out, "}";
	}
    }

    sub sql_select_list {
	my ($out, $use_cache, $param, $tail, $suffix)=@_;
	my $fields=$MyDef::def->{fields};
	my @flist=split /,\s*/, $param;

	sql_select($out, \@flist, $tail);
	# ---------------------------------
	push @$out, "\$itemlist$suffix=array();";
	push @$out, "while (\$row=mysql_fetch_row(\$r)){";
	push @$out, "    \$i$suffix=array();";
	my $j=0;
	foreach my $f(@flist){
	    my ($varname, $colname)=sql_parse_var($f);
	    $ff=$fields->{$varname};
	    $type=getfieldtype($ff, $colname);
	    push @$out, "    \$i$suffix\['$varname']=\$row[$j];";
	    $j++;
	}
	push @$out, "    \$itemlist$suffix\[]=\$i$suffix;";
	push @$out, "}";
    }

    sub sql_select_array {
	my ($out, $use_cache, $param, $tail)=@_;
	my $fields=$MyDef::def->{fields};
	my @flist=split /,\s*/, $param;

	sql_select($out, \@flist, $tail);
	# ---------------------------------
	my ($varname, $colname)=sql_parse_var($flist[0]);
	push @$out, "\$$varname\_list=array();";
	push @$out, "while (\$row=mysql_fetch_row(\$r)){";
	push @$out, "    \$$varname\_list[]=\$row[0];";
	push @$out, "}";
    }

    sub sql_select_hash {
	my ($out, $use_cache, $param, $tail)=@_;
	my $fields=$MyDef::def->{fields};
	my @flist=split /,\s*/, $param;

	sql_select($out, \@flist, $tail);
	# ---------------------------------
	my ($varname, $colname, $single);
	if(@flist==1){
	    $single=1;
	    ($varname, $colname)=sql_parse_var($flist[0]);
	}
	else{
	    ($varname, $colname)=sql_parse_var($flist[1]);
	}
	push @$out, "\$$varname\_list=array();";
	push @$out, "while (\$row=mysql_fetch_row(\$r)){";
	if($single){
	    push @$out, "    \$$varname\_list[\$row[0]]=\$row[0];";
	}
	else{
	    push @$out, "    \$$varname\_list[\$row[0]]=\$row[1];";
	}
	push @$out, "}";
    }

    sub sqlrun {
	my ($out, $sql, $use_cache)=@_;
	if($sql=~/(UPDATE\s+\S+\s+SET)\s+(.*?)\s+(WHERE\s.*)/i){
	    sql_update($out, $use_cache, $1, $2, $3);
	}
	elsif($sql=~/((INSERT|INSERT IGNORE|REPLACE)\s+INTO\s+\S+\s+)(.*)/i){
	    sql_insert($out, $1, $3);
	}
	elsif($sql=~/SELECT_COUNT(_(\w+))? (FROM\s.*)/i){
	    sql_select_count($out, $use_cache, $3, $2);
	}
	elsif($sql=~/SELECT_LIST\s+(.*?)\s+(FROM\s.*)/i){
	    sql_select_list($out, $use_cache, $1, $2);
	}
	elsif($sql=~/SELECT_LIST(_\w+)\s+(.*?)\s+(FROM\s.*)/i){
	    sql_select_list($out, $use_cache, $2, $3, $1);
	}
	elsif($sql=~/SELECT_ARRAY\s+(.*?)\s+(FROM\s.*)/i){
	    sql_select_array($out, $use_cache, $1, $2);
	}
	elsif($sql=~/SELECT_HASH\s+(.*?)\s+(FROM\s.*)/i){
	    sql_select_hash($out, $use_cache, $1, $2);
	}
	elsif($sql=~/SELECT\s+(.*?)\s+(FROM\s.*)/i){
	    sql_select_one($out, $1, $2);
	}
	else{
	    push @$out, "\$sql=\"$sql\";";
	    sql_exec($out);
	}
    }

