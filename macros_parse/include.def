#---- includes ---------------------------- 
subcode: _autoload
    $call dbl_list, includes

# ref: parseutil.def - fncode: import_file
subcode: parse_switch_include
    $elif $curindent==0 and $line=~/^include:?\s*(.*)/
        $call add_include, $1
    $elif $curindent==0 and $line=~/^include_path:\s*(.*)/
        add_path($1)

# ref: macros_parse/default_page.def
subcode: default_page_include
    $elif $k eq "include"
        $call add_include, $v
    $elif $k eq "include_path"
        add_path($v)

#----------------------------------------
subcode: add_include(t)
    $if $(t) eq "$def->{name}.def"
        $print include main self [$(t)]?
    $else
        $call dbl_push, includes, $(t)

subcode: load_standard_includes
    my $module = $MyDef::var->{module}

    my @standard_includes
    $if $MyDef::var->{'include'}
        push @standard_includes, split(/[:,]\s*/, $MyDef::var->{'include'})

    my $stdinc="std_$module.def"
    push @standard_includes, $stdinc

