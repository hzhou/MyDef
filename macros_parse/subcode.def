subcode:: import_file_init
    my $source

subcode: push_line_to_source
    push @$source, $line

subcode: set_source_pos
    push @$source, "SOURCE: $cur_file - $cur_line"

subcode: set_source_pos_1
    push @$source, "SOURCE: $cur_file - ".($cur_line-1)

subcode: source_indent
    push @$source, "SOURCE_INDENT";
subcode: source_dedent
    push @$source, "SOURCE_DEDENT";

#----------------------------
subcode: subcode_start
    expand_macro(\$line, $macros)
    my $t_code
    $if $line=~/^(\w+)code:([:@\d]?)\s*(\w+)(.*)/ -> $type, $attr, $name, $t
        $call @line_extra
        $call get_parent, code_list
        $t_code = new_code($type,$name,$attr, $t)
        push @{$code_list}, $t_code
        # $call @debug
    $else
        $t_code={} # sinkhole
    $source=[]
    $t_code->{source}=$source
    $call set_source_pos

    # ------------
    subcode: line_extra
        # fncode: class.method
        $if $t=~/^(\.\w+)(.*)/
            $name .= $1
            $t = $2

    subcode: debug
        $print $type code $name, parent: -
        $if $parent == $def
            $print def
        $elif $parent->{_pagename}
            $print page: $parent->{_pagename}
        $else
            $print code: $parent->{name}

#---------------------------------------- 
fncode: new_code($type,$name,$attr,$t)
    $global $code_index=0
    $code_index++
    my $t_code={type=>$type, index=>$code_index, name=>$name}
    $if !$attr
        $if $name=~/^(.*_autoload|main)$/
            $attr=":"
    $call parse_subcode_order, $attr
    $call parse_tail
    return $t_code

    subcode: parse_tail
        # (params)
        $if $t=~/^\s*\(\s*(.*)\)(.*)/
            $t=$2
            my @params=split /,\s*/, $1;
            $t_code->{params}=\@params
        # : tail
        $if $t=~/^\s*:\s*(.+)/
            $t_code->{tail} = $1

subcode: parse_subcode_order(attr)
    # 1-8 merge -- consider only use 1,5,8
    # 0,9 keep one
    $if !$(attr)
        # keep one, overwrite
        $t_code->{order}=9
    $elif $(attr) eq '@'
        # default, gets overwritten
        $t_code->{order}=0
    $elif $(attr) eq ':'
        # 1-8, merge, append
        $t_code->{order}=5
    $else
        # \d, direct priority
        $t_code->{order}=$(attr)

fncode: merge_codes($codeitem)
    my $L=$codeitem->{code_list}
    $if !$L
        return
    my %H
    my @sorted = sort {$a->{order} <=> $b->{order} } @$L
    $foreach $code in @sorted
        my $name = $code->{name}
        $if !$H{$name}
            $H{$name} = $code
        $else
            $call merge_to, $H{$name}
    $codeitem->{codes}=\%H
    undef $codeitem->{code_list}

    subcode: merge_to(C)
        my $a = $(C)->{order}
        my $b = $code->{order}
        $if $a==0
            $(C)=$code
        $elif $b==9
            $if $a>0
                $call @warn_overwrite
            $(C)=$code
        $else
            my $src_a = $(C)->{source}
            my $src_b = $code->{source}
            push @$src_a, @$src_b

    subcode: warn_overwrite
        my $loc_a = $(C)->{source}->[0]
        my $loc_b = $code->{source}->[0]
        $loc_a=~s/SOURCE: //
        $loc_b=~s/SOURCE: //
        $print Overwriting subcode $name: [$loc_a] -> [$loc_b]

#--------------------------
subcode:: code_pre_end
    merge_codes($codeitem)

subcode:: post_parsing
    merge_codes($def)

subcode:: code_post_end
    $source = $codeitem->{source}
    $call set_source_pos

#---------------------------------------- 
subcode: jump_to_main_code
    $call add_main_code
    $call start_code_indent, code, $curindent, $t_code
    $call set_source_pos_1
    push @$source, $line

subcode: add_main_code
    my $t_code
    $if $page->{codes}->{main}
        $t_code = $page->{codes}->{main}
        $source = $t_code->{source}
    $else
        $source=[]
        $t_code={'type'=>"sub", 'source'=>$source, 'name'=>"main"};
        $page->{codes}->{main}=$t_code

