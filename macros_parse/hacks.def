subcode:8 post_parsing
    post_foreachfile($def);
    # post_matchblock($def);

#---------------------------------------- 
# Hack for the following work:
#page: order$1
#    output_dir: sales
#    foreachfile: templates/order(*).php
#    htmlcode: main
#        $call basic_process
#        $include templates/order$1.php

fncode: post_foreachfile($def)
    my $pages=$def->{pages};
    my $pagelist=$def->{pagelist}
    $while my ($name, $p)=each(%$pages)
        $if $p->{foreachfile}
            my $pat_glob=$p->{foreachfile};
            my $pat_regex=$p->{foreachfile};
            my $n;
            $n=$pat_glob=~s/\(\*\)/\*/g;
            $pat_regex=~s/\(\*\)/\(\.\*\)/g;
            my @files=glob($pat_glob);
            $foreach my $f in @files
                my @pat_list=($f=~/$pat_regex/);
                dupe_page($def, $p, $n, @pat_list);
            delete $pages->{$name};

fncode: dupe_page
    my ($def, $orig, $n, @pat_list)=@_;
    my $pagename=dupe_line($orig->{name}, $n, @pat_list);
    print "    foreach file $pagename $n: ", join(",", @pat_list), "\n";
    my $page={};
    $while my ($k, $v)=each(%$orig)
        $if $k eq "pagename"
            $page->{name}=$pagename;
        $elif $k eq "codes"
            my $codes={};
            $while my ($tk, $tv)=each(%$v)
                my $tcode={};
                $tcode->{type}=$tv->{type};
                $tcode->{params}=$tv->{params};
                my @source;
                my $tsource=$tv->{source};
                $foreach $l in @$tsource
                    push @source, dupe_line($l, $n, @pat_list);
                $tcode->{source}=\@source;
                $codes->{$tk}=$tcode;
            $page->{codes}=$codes;
        $elif $k ne "foreachfile"
            $page->{$k}=dupe_line($v);

    my $pages=$def->{pages};
    my $pagelist=$def->{pagelist}
    $call add_page

fncode: dupe_line
    my ($l, $n, @pat_list)=@_;
    $for my $i=1; $i<=$n; $i++
        my $rep=$pat_list[$i-1];
        $l=~s/\$$i/$rep/g;
    return $l;

