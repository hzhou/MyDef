macros:
    top: "top",0,$def

subcode:: import_file_init
    my $curindent=0
    my ($codetype, $codeindent, $codeitem) = ($(top))
    my @indent_stack

macros:
    top_scope: $curindent == $codeindent and $codetype ne "macro"
    in_code: $codetype eq "code" and ($codeindent>0 or $in_default_page)
    in_macro: $codetype eq "macro" and $codeindent>0 

subcode: start_code_indent(type, indent, item)
    # $print start_code_indent $(type) - $(indent) - $(item)
    $(if:type=page)
        @indent_stack=([$(top)])
    $(else)
        push @indent_stack, [$codetype, $codeindent, $codeitem]
    $codetype   = "$(type)"
    $codeindent = $(indent)
    $codeitem   = $(item)
    # prevent starting empty line triger dedent
    $curindent=$(indent)
    $lastindent = $curindent

subcode: check_end_codeindent
    $while $curindent <$codeindent or ($(stub:default_page_end))
        $call @codeitem_pre_end
        my $t = pop @indent_stack
        ($codetype, $codeindent, $codeitem) = @$t
        $lastindent = $codeindent
        $call @codeitem_post_end

    bypasscode: default_page_end
        $in_default_page
        and $line=~/^END/
        and $curindent==0
        and @indent_stack

#---------------------------------------- 
subcode:: import_file_init
    my $pages=$def->{pages}
    my $pagelist=$def->{pagelist}
    my $macros=$def->{macros}

#---------------------------------------- 
subcode: update_source_pos
    $if $line_skipped
        $call set_source_pos_1
        $line_skipped=0

subcode:: import_file_init
    my $lastindent;

subcode: get_source_indent(curindent)
    $while $(curindent)>$lastindent
        $lastindent++;
        $call source_indent

subcode: get_source_dedent(curindent)
    $while $(curindent)<$lastindent
        $lastindent--;
        $call source_dedent
# --------------------
subcode:: codeitem_pre_end
    $if $codetype eq "code"
        $call get_source_dedent, $codeindent

#---------------------------------------- 
subcode: get_parent(what)
    $(if:parent)
        # hack used in jump_to_main_code and add_default_page_main_code
        my $parent=$(parent)
    $(else)
        my $parent
        $if $curindent==0
            $parent = $def
        $elif $curindent==1 and $#indent_stack==1 and !$in_default_page
            # [page, main code]: take page
            # [main code, top code]: take top
            $parent = $indent_stack[1]->[2]
        $else
            $parent = $codeitem
    # --------------------
    my $$(what)
    $if !$parent->{$(what)}
        $(if:what=code_list)
            $$(what) = []
        $(else)
            $$(what) = {}
        $parent->{$(what)}=$$(what)
    $else
        $$(what) = $parent->{$(what)}

