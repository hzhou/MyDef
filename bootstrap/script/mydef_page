#!/usr/bin/perl
use strict;
use warnings;
use MyDef;
my $def_file;
my %config;
my $default_module=$MyDef::var->{module};
foreach my $a (@ARGV){
    if($a =~ /^-m(\w+)/){
        $config{module} = $1;
    }
    elsif($a =~/^-o(\S+)/){
        $config{output_dir} = $1;
    }
    elsif($a =~/^-f(\S+)/){
        $config{find} = $1;
    }
    elsif($a=~/\.def$/){
        if($def_file){
            die "Multiple def source files not supported\n";
        }
        if(-f $a){
            $def_file=$a;
        }
        else{
            die "$a is not a regular file\n";
        }
    }
    elsif($a eq "-pipe"){
        $def_file="-pipe";
    }
}
if(!$def_file){
    die "Please supply data definition file.";
}
if($def_file eq "-pipe"){
    MyDef::pipe_page($config{module});
}
else{
    $config{def_file}=$def_file;
    MyDef::init(%config);
    my $module=$MyDef::var->{module};
    MyDef::import_data($def_file);
    if($config{find}){
        my $def=$MyDef::def;
        my $name=$config{find};
        if($def->{codes}->{$name}){
            my $code=$def->{codes}->{$name};
            my $type=$code->{type};
            my $param=join ", ", @{$code->{params}};
            my $source=$code->{source};
            my $indent=1;
            print $type, "code: $name($param)\n";
            foreach my $l (@$source){
                if($l=~/^SOURCE_INDENT/){
                    $indent++;
                }
                elsif($l=~/^SOURCE_DEDENT/){
                    $indent--;
                }
                else{
                    print "    "x$indent, $l, "\n";
                }
            }
        }
        elsif($def->{macros}->{$name}){
            print "macro: $name: $def->{macros}->{$name}\n";
        }
        else{
            print "name: $name not found.\n";
        }
    }
    else{
        my $pages=$MyDef::def->{pages};
        my $pagelist=$MyDef::def->{pagelist};
        foreach my $t (@$pagelist){
            my $p=$pages->{$t};
            if($p->{subpage}){
                next;
            }
            my $t_module=$default_module;
            if($p->{module}){
                $t_module=$p->{module};
            }
            if($t_module and ($t_module ne $module)){
                print "skip page $t: module mismatch [page:$t_module][config:$module]\n";
                next;
            }
            MyDef::createpage($t);
        }
    }
}
