page: mydef_install
    type:
    output_dir: script

    $call parse_args
    # mydef_install deflib . def      --> *.def -> ${MYDEFLIB}
    # mydef_install MyDef/lib . pm    --> *.pm  -> ${PERL5LIB}
    # mydef_install MyDef/script . -  --> *     -> ${PATH}
    # mydef_install - out/{a,b,c}     --> *     -> ${PATH}

    $call check_install_dir

    $if $dst ne "."
        $install_dir.="/$dst"

    $if @$src_list
        install_all($src_list, $install_dir, $ext)

subcode: parse_args
    $global $b_force
    $if $ARGV[0] eq "-f"
        $b_force = 1
        shift @ARGV

    my ($dst, $ext) 
    my $src_list
    $if $ARGV[0] eq "-"
        ($dst, $ext) = (".", "-")
        shift @ARGV
        $src_list=[]
        $foreach $a in @ARGV
            $if -f $a
                push @$src_list, $a
            $elif -d $a
                my $tlist = load_srcs_dir($a,"-")
                push @$src_list, @$tlist
    $else
        my $src = $ARGV[0]
        ($dst, $ext)=($ARGV[1], $ARGV[2])
        $if !$ext
            $ext = "def"
        $if -d $src
            $src_list = load_srcs_dir($src, $ext)
        $else
            die "Not a directory [$src]\n"

#---------------------------------------- 
fncode: load_srcs_dir($dir, $ext)
    $if $dir ne "."
        chdir $dir or die "Can't chdir $dir\n";

    my @files=glob("*");

    my @srcs;
    my @dirs;
    $foreach $f in @files
        $if -d $f
            push @dirs, $f;
        $elif $ext eq "-"
            push @srcs, $f;
        $elif $f=~/\.$ext$/
            push @srcs, $f;
    $call load_dirs
    return \@srcs

    # ---- load a single level of dirs ----
    subcode: load_dirs
        $foreach $d in @dirs
            $if -f "$d/skip"
                next
            my $pat = "$d/*.$ext"
            $if $ext eq "-"
                $pat = "$d/*"
            my @files=glob($pat);
            $if @files
                $foreach $f in @files
                    push @srcs, $f;
#----------------------------------------------
fncode: install_all($src_list, $install_dir, $ext)
    $call check_exist, $install_dir
    my @cmds
    $if $ext eq "-"
        &call load_cmds, install -m555
            my $t=$src
            $t=~s/^.*\///
            my $dst = "$install_dir/$t"
    $else
        &call load_cmds, install -m644
            $if $src=~/(.*)\//
                $call check_exist, $install_dir/$1
            my $dst="$install_dir/$src"

    $if @cmds
        $print install_all: $install_dir [$ext]
        $foreach $cmd in @cmds
            $print "  :| $cmd"
            system $cmd

    subcode: load_cmds(install)
        $foreach $src in @$src_list
            BLOCK
            $if !-e $dst or $b_force or (-M $src < -M $dst)
                push @cmds, "$(install) $src $dst"

    subcode: check_exist(d)
        $if !-d "$(d)"
            mkdir "$(d)" or die "Can't mkdir $(d)"

#----------------------------------------------- 
subcode: check_install_dir
    my $home = $ENV{HOME}
    my $install_dir
    $if $dst=~/^(\/.*)/
        $install_dir=$1
        $dst = "."
    $elif $ext eq "def"
        $install_dir=$ENV{MYDEFLIB}
        $install_dir=~s/:.*//
        $if  !$install_dir
            $print "Missing environment variable MYDEFLIB\n"
            $print "    try put 'MYDEFLIB=\$HOME/lib/MyDef' in your .bashrc (and source it)\n"
            exit
    $elif $ext eq "pm"
        $install_dir=$ENV{PERL5LIB}
        $install_dir=~s/:.*//
        $if  !$install_dir
            $print "Missing environment variable PERL5LIB\n"
            $print "    try put 'PERL5LIB=\$HOME/lib/perl5' in your .bashrc (and source it)\n"
            exit
    $elif $ext eq "-"
        $install_dir=$ENV{PATH}
        $install_dir=~s/:.*//
        $if $install_dir ne "$home/bin"
            $print "This will install script into your leading path: [$install_dir]"
            $print "  press 'y' to continute (abort otherwise)"
            my $t =<STDIN>
            $if $t!~/^\s*y\s*$/
                undef $install_dir
        $if  !$install_dir
            $print "Missing environment variable PATH\n"
            $print "    try put 'PATH=\$HOME/bin' in your .bashrc (and source it)\n"
            exit

    $if  !-d $install_dir
        mkdir $install_dir or die "Can't mkdir $install_dir\n";


