include: output.def

page: output_perl, output_main
    type: pm
    output_dir: lib/MyDef
    ext: pl
    init_mode: sub
    package: MyDef::output_perl
    interface_type: perl

subcode: init_page
    $if $page->{package} and !$page->{type}
	$page->{type}="pm"
	$ext="pm"
    $elif !$page->{package} and $page->{type} eq "pm"
	$page->{package}=$page->{pagename}

subcode:: package_globals
    our @globals
    our %globals

# --------------------------
subcode: case_flag_set
    $global $case_flag="\$b_flag_case"
    push @$out, "my \$b_flag_case=1;"
subcode: case_flag_reset
    push @$out, "my \$b_flag_case=0;"

subcode: parsecode
    $call parsecode_case_support, if, elsif, c_style
    $if $l=~/^\s*\$(\w+)\s*(.*)$/
	my $func=$1;
	my $param=$2;
	$if $func =~ /^global$/
	    $param=~s/\s*;\s*$//
	    my @tlist=MyDef::utils::proper_split($param)
	    $foreach $v in @tlist
		$if !$globals{$v}
		    $globals{$v}=1
		    push @globals, $v
	    return 0
	$elif $func eq "sub"
	    $if $param=~/^(\w+)\((.*)\)/
		return single_block_pre_post(["sub $1 {", "INDENT", "my ($2)=\@_;"], ["DEDENT", "}"], "sub")
	    $else
		return single_block("sub $param {", "}", "sub")

	$elif $func =~ /^(while)$/
	    return single_block("$1($param){", "}")
	$elif $func eq "for"
	    $call parsecode_for_support, c_style
	$elif $func eq "foreach"
	    $call parsecode_foreach

    $call check_termination
    push @$out, $l

    return 0;
#---------------------------------------- 
subcode: for_i0_i1_step
    $if $step eq "1"
	$step="++"
    $elif $step eq "-1"
	$step="--"
    $else
	$step= "+=$step"
    $call loop_var, $var
    $param="my $var=$i0; $var $i1; $var$step"

subcode: parsecode_foreach
    $if $param=~/(\S+)\s+in\s+(.*)/
	my ($var, $list)=($1, $2)
	$call loop_var, $var
	return single_block("foreach my $var ($list){", "}", "foreach")

subcode: loop_var(var)
    $if $(var)=~/^(\w+)/
	$(var)='$'.$(var)
#---------------------------------------- 
subcode: dumpout
    # needed for wrapping up &case support
    parsecode("NOOP")
    # ---------------
    $if !defined $pagetype or $pagetype eq "pl"
	push @$f, "#!/usr/bin/perl\n"

    push @$f, "use strict;\n"

    $if $MyDef::page->{package}
	push @$f, "package ".$MyDef::page->{package}.";\n"
    
    $foreach $v in @globals
	push @$f, "our $v;\n"

subcode: check_termination
    #$l=~s/^\|//;
    $if $l=~/^\s*$/
	# NOOP
    $elif $l=~/^\s*(break|continue);?\s*$/
	$if $1 eq "break"
	    $l="last;"
	$elif $l eq "continue"
	    $l="next;"
    $elif $l=~/^\s*(for|while|if|else if)\s*\(.*\)\s*$/
	# NOOP
    $elif $l=~/^\s*}/
	# Check the formal blockend
	# Inline blocks will get ; appended.
    $elif $l!~/[,:\(\[\{;]\s*$/
	#print "[$l]appending ;\n";
	$l.=";";
    $else
	#print "[$l]\n";

