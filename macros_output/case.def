subcode: parsecode_case_support(if, elif, style)
    $global $case_if="$(if)", $case_elif="$(elif)"

    $global @case_stack
    $global $case_state, $case_wrap
    $call debug_case_l

    my $check_unwrap
    $if $l=~/^\x24(if|elif|elsif|elseif|case)\s+(.*)$/
        my $cond=$2
        my $case=$case_if
        $call check_case_if
        $(if:parse_condition)
            $cond=parse_condition($cond)
        &call return_newblock, if
            $call case_$(style)
            $call case_push, "if"
    $elif $l=~/^\$else/
        $if !$case_state and $l!~/NoWarn/i
            $call warn, Dangling \$else
        &call return_newblock, else
            $call else_$(style)
            $call case_push, undef
    $elif $l!~/^SUBBLOCK/
        # ***************
        undef $case_state
        $call @case_unwrap
        $if $l eq "CASEPOP"
            $call case_pop
            return 0

    # -------------------------------- 
    subcode: check_case_if
        $if $1 eq "if"
            $call @case_unwrap
        $elif $1 eq "case"
            $if !$case_state
                $case=$case_if
            $else
                $case=$case_elif
        $else
            $case=$case_elif

#---------------------------------------- 
subcode: case_push(state)
    push @src, "PARSE:CASEPOP"
    push @case_stack, {state=>$(state), wrap=>$case_wrap}

    undef $case_state
    undef $case_wrap
    $call debug_case_push

subcode: case_pop
    $call debug_case_pop
    my $t_case=pop @case_stack
    $if $t_case
        $case_state=$t_case->{state}
        $case_wrap=$t_case->{wrap}

#---- called from $list function ---
subcode: case_reset
    $global @case_stack
    $global $case_state, $case_wrap
    @case_stack=()
    undef $case_state
    $call debug_case_reset
    $call case_unwrap

#----
subcode: case_unwrap
    $if $case_wrap
        $call @debug_case_unwrap
        push @$out, @$case_wrap
        undef $case_wrap

#----------------------------------------------- 
#----- c style ----------------------
#-- $call parsecode_case_support, if, else if, c_style
subcode: case_c_style
    $call push_single_block, "$case($cond){", "}"

subcode: else_c_style
    $call push_single_block, "else{", "}"

#---- sh style ----------------
#-- $call parsecode_case_support, if, elif, sh_style
subcode: case_sh_style
    push @src, "$case $cond then"
    $call push_indent_block
    $if $case eq "if"
        $if !$case_wrap
            $case_wrap=[]
        push @$case_wrap, "fi"

subcode: else_sh_style
    push @src, "else"
    $call push_indent_block

# -------------------------------------------
subcode: debug_case_push
    $if $debug eq "case"
        my $level=@case_stack
        print "Entering case [$level]: $l\n"
subcode: debug_case_pop
    $if $debug eq "case"
        my $level=@case_stack
        print "    Exit case [$level][wrap:$case_wrap]\n"
subcode: debug_case_l
    $if $debug eq "case"
        my $level=@case_stack
        print "        $level:[$case_state]$l\n"

subcode: debug_case_unwrap
    $if $debug eq "case"
        my $level=@case_stack
        print "   $level:[case_unwrap]$l\n"

subcode: debug_case_reset
    $if $debug eq "case"
        $print "    CASE RESET\n"
