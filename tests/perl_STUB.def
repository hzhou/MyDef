page: test
    module: perl

    &call test, basic DUMP_STUB
        DUMP_STUB init
        $global $a = 1
        $print \x24a = $a (should be 2 not 1)
        $a++
        DUMP_STUB init
        $print \x24a = $a (2nd DUMP_STUB is empty)
        $(block:init)
            $a = 2

    &call test, INSERT_STUB[, ]: --> \x7bSTUB\x7d <-- 
        $print --> {STUB} <--\n
        INSERT_STUB[, ] _dummy_
        $(block:_dummy_)
            $(mode:bypass)
            a
            b
            c
            $(mode:sub)
        $print what mode is it now?

    &call test, \x24(block:STUB): --> \x7bSTUB\x7d <-- 
        $print --> {STUB} <--\n
        $(block:STUB)
            a
            b
            c
        $print what mode is it now?

    &call test, \x24(block:STUB:-): --> \x7bSTUB\x7d <-- 
        $print --> {STUB} <--\n
        $(block:STUB:-)
            a
            b
            c

    &call test, \x24(stub:make_string)!
        $print $(stub:make_string)!

    &call test, \x24(stub:; :make_string)!
        $print $(stub:; :make_string)!

    &call test, \x24if \x24(stub:make_cond)
        $if $(stub:make_cond)
            $print STUB in \$if works!

    subcode: test(stubtype)
        $print TEST: $(stubtype)\n      -
        BLOCK


    bypasscode: make_string
        a
        b
        c
        
bypasscode: make_cond
    1
