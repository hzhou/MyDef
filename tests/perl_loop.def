# reference: http://hz2.org/blog/einstein_notation.html

#-- $sum, $loop, $sumcode means the same thing
page: test
    type: pl

    # $call test_1
    $call test_sumcode
    $call test_sumcode_2

subcode: test_sumcode
    $my @a
    $loop(10) $a[i]=i
    $loop(10) print "i: $a[i]\n"

subcode: test_sumcode_2
    $loop(10) print "sumcode simple: i \n"

    $my @a, @T=(0,1,1,0)
    $loop(2,2) $a[i,j]=i+j
    $loop(2,2) print "i, j: $a[i,j]\n"

    $print
    $my @b
    $sum(2,2) $b[i,j]=$T[i,k]*$a[k,j]
    $loop(2,2) print "i, j: $b[i,j]\n"

#---------------------------------------- 
subcode: test_1
    my $n=5
    print "\$n = 5\n"

    $call test_for, 10, $i
    $call test_for, $n:0, $i
    $call test_for, $n:10, $i

    print "\n---- i0:i1:step ----\n"
    $call test_for, j=10:0, $j
    $call test_for, j=10:0:-1, $j
    $call test_for, j=0:10:1, $j

    $call test_for, k=0:100:$n, $k
    $call test_for, k=100:0:-$n, $k

    $call test_foreach, $t in 1, $t

subcode: test_for(param, var)
    $(if:param~\$)
        print "\nTest \$for \$(param) ...\n    "
    $(else)
        print "\nTest \$for $(param) ...\n    "
    $for $(param)
        print "$(var) "
    print "\n"

subcode: test_foreach(param, var)
    $(if:param~\$)
        print "\nTest \$foreach \$(param) ...\n    "
    $(else)
        print "\nTest \$foreach $(param) ... ...\n    "
    $foreach $(param)
        print "$(var) "
    print "\n"

