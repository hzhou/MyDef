# Uses default 32-bit RGB format

# ---------------------------------------
subcode:: load_bitmap_functions
    $list save_bmp
    $list load_bmp
    $list load_bmp_clip
    $list get_dib

fncode: save_bmp(char * data, tn_w, tn_h, ts_filename)
    # No Padding. Need make sure tn_w is multiple of 4
    $if tn_w % 4==0
        $local BITMAPFILEHEADER bf
        memset(&bf, 0, sizeof(bf))
        bf.bfType=0x4d42
        bf.bfOffBits=54
        $call fill_bi_header, tn_w, tn_h

        &call open_w, ts_filename
            fwrite(&bf, 1, 14, file_out)
            fwrite(&bi, 1, 40, file_out)
            fwrite(data, 1, 4*tn_w*tn_h, file_out)

fncode: load_bmp(ts_filename, int * pw, int * ph)
    $return_type char *
    $local char * tp_data, tn_w, tn_h

    &call open_r, ts_filename
        $local BITMAPFILEHEADER bf
        $local BITMAPINFO bi

        fread(&bf, 1, 14, file_in)
        fread(&bi, 1, 40, file_in)
        tn_w=bi.bmiHeader.biWidth
        tn_h=bi.bmiHeader.biHeight
        $allocate(4*tn_w*tn_h) tp_data
        fread(tp_data, 4, tn_w*tn_h, file_in)

    *pw=tn_w
    *ph=tn_h
    return tp_data

fncode: load_bmp_clip(int * pw, int * ph)
    $return_type char *
    $local char * tp_data

    $if IsClipboardFormatAvailable(CF_BITMAP)
        tn_ret=OpenClipboard(NULL)
        $call assert, tn_ret
        $local HBITMAP h_bitmap
        h_bitmap=GetClipboardData(CF_BITMAP)
        $call assert, h_bitmap
        $local char * tp_data
        tp_data=get_dib(h_bitmap, pw, ph)
        CloseClipboard()
        return tp_data
    $else
        return NULL

# ####################################################
fncode: get_dib(HBITMAP hbmp, int * pw, int * ph)
    $local BITMAP ddb
    tn_ret=GetObject(hbmp, sizeof(ddb), &ddb)
    $if tn_ret
        tn_w=ddb.bmWidth
        tn_h=ddb.bmHeight
        $local char * ts_data
        $allocate(tn_w*tn_h*4) ts_data
        $call fill_bi_header, tn_w, tn_h
        $local HDC hdc
        hdc=GetDC(NULL)
        GetDIBits(hdc, hbmp, 0, tn_h, ts_data, (BITMAPINFO*)&bi, DIB_RGB_COLORS)
        ReleaseDC(NULL, hdc)
        $if pw
            *pw=tn_w
            *ph=tn_h
        return ts_data
    $else
        return NULL

# ---------------------------------------
subcode: draw_dib(hdc, x, y, data, w, h)
    $call fill_bi_header, $(w), $(h)
    StretchDIBits($(hdc), $(x), $(y), $(w), $(h), 0, 0, $(w), $(h), $(data), &bi, DIB_RGB_COLORS, SRCCOPY)

# ========================================
subcode: fill_bi_header(w, h)
    $local BITMAPINFO bi
    memset(&bi, 0, sizeof(bi))
    bi.bmiHeader.biSize=40
    bi.bmiHeader.biWidth=$(w)
    bi.bmiHeader.biHeight=$(h)
    bi.bmiHeader.biPlanes=1
    bi.bmiHeader.biBitCount=32
    bi.bmiHeader.biCompression=BI_RGB
