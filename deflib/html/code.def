subcode: code_css
    CSS: pre {background-color: #ddd; margin: 4px 10px; padding-left: 20px}
    CSS: .mydef-comment {color: #888;}
    CSS: .mydef-label {color: #22f;}
    CSS: .mydef-keyword {color: #494;}
    CSS: .mydef-preproc {color: #844;}
    CSS: .mydef-include {color: #444; text-decoration: underline;}
    CSS: .mydef-quote {color: #a2a;}
    CSS: .mydef-macro {color: #494;}

#----------------------------------------------- 
subcode: precode
    <pre><code>
    PUSHDENT
    BLOCK
    POPDENT
    </code></pre>

#---------------------------------------- 
include: ext.def

perlcode: codeprint
    my $type
    $call grab_codelist
    $if !$codelist
        $if $param=~/(\w+),\s*(\S+),\s*(.*?)\s*$/
            $type=$1
            $call grab_file, $2, $3
    $if !$type
        $if $param=~/(\w+)/
            $type=$1
    $if ref($codelist) eq "ARRAY"
        $while $codelist->[-1]=~/^\s*$/
            pop @$codelist
        push @$out, "<pre><code>"
        push @$out, "PUSHDENT"
        $foreach $t in @$codelist
            $call code_filter
            push @$out, $t
        push @$out, "POPDENT"
        push @$out, "</code></pre>"

subcode: grab_file(f, name)
    my @t
    my ($file, $pat)=($(f), $(name))
    $if $file=~/def\/(.*)/
        push @t, "#---- $1: $pat ----\n"
    $elif $file=~/.*\/(.*)/
        push @t, "#---- $1: $pat ----\n"
    my $flag
    $if open In, $file 
        $if $pat
            $while <In>
                $if /^\#----\s*$pat\s*----/
                    $flag=1
                $elif /^\#----.*----/
                    $flag=0
                $elif !$flag and /^\s*#\s*--\s*$pat\s*--/
                    $flag=2
                $elif $flag==2 and /^\s*#\s*--.*--/
                    $flag=0
                $elif $flag
                    push @t, $_
        $else
            $while <In>
                push @t, $_
        close In
    $else
        die "Can't open $file\n"
    $while $t[-1]=~/^\s*$/
        pop @t
    $codelist=\@t

subcode: grab_file_all(f)
    my @t
    my $file=$(f)
    $if $file=~/.*\/(.*)/ and $type eq "mydef"
        push @t, "#---- file: $1 ----\n"
    &call open_r, $file
        push @t, $_
    $while $t[-1]=~/^\s*$/
        pop @t
    $codelist=\@t

#---------------------------------------- 
subcode: global_pattern(name, p)
    $if $t=~/$(p)/
        my @plist=split /($(p))/, $t
        my @tlist
        $foreach $p in @plist
            $if $p=~/^$(p)$/
                push @tlist, "<span class=\"mydef-$(name)\">$p</span>" 
            $else
                push @tlist, $p
        $t=join('', @tlist)

#---------------------------------------- 
subcode: code_filter
    $(set:span=<span class=\"mydef-$1\">$2</span>)
    $t=~s/&#35;/#/g
    $t=~s/&(?!call)/&amp;/g
    $t=~s/</&lt;/g
    $if $type eq "mydef"
        $call mydef_filter
    $elif $type eq "python"
        $call python_filter

#---------------------------------------- 
subcode: mydef_filter
    $(set:span=<span class=\"mydef-$1\">$2</span>)
    #print "mydef_filter [$t]\n"
    $if $t!~/</ 
        $call global_pattern, quote, ".*?"
        $call global_pattern, macro, \$\(.*?\) 

    $if $t=~/^(\s*)((#|&#35;).*)/
        $t="$1$(span:comment, $2)"
    $elif $t=~/(.*)(\s(#|&#35;)\s.*)/
        $t="$1$(span:comment, $2)"
    $elif $t=~/^(\s*)(page|\w+code)(:.?\s*)(\w+)(.*)/
        $t="$1$(span:label, $2)$3$(span:label, $4)$5"
    $elif $t=~/^(\s*)(macros):/
        $t="$1$(span:label, $2):"
    $elif $t=~/^(\s*)(\$call|\$map|\&call)\s*(\S+)(.*)/
        $t="$1$(span:keyword, $2) <strong>$3</strong>$4"
    $elif $t=~/^(\s*)(CSS|include):\s*(.*)/
        $t="$1$(span:preproc, $2): $(span:preproc, $3)"
    $elif $t=~/^(\s*)\$\b(if|while|do|switch|for|elif|elsif|else|function|if_match)\b(.*)/
        $t="$1$(span:keyword,\$$2)$3"
    $elif $t=~/^(\s*)(return|throw|break|continue)(.*)/
        $t="$1$(span:label, $2)$3"

subcode: sh_filter
    $if $t=~/^(\s*)((#|&#35;).*)/
        $t="$1$(span:comment, $2)"
    $elif $t=~/^\$ (.*)/
        $t="<span class=\"mydef-keyword\">\$ </span><b>$1</b>"

subcode: python_filter
    $call global_pattern, quote, ".*?"
    $if $t=~/^(\s*)((#|&#35;).*)/
        $t="$1$(span:comment, $2)"
    $elif $t=~/^(\s*)(import)\s*(.*)/
        $t="$1$(span:preproc, $2): $(span:preproc, $3)"
    $elif $t=~/^(\s*)(if|while|do|switch|for|elif|else|def|case)\b(.*)/
        $t="$1$(span:keyword,$2)$3"
    $elif $t=~/^(\s*)(return|throw|break|continue)/
        $t="$1$(span:label, $2)"
