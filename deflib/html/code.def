
subcode: css_code
    CSS: pre {background-color: #ddd; margin: 4px 10px; padding-left: 20px}
    CSS: .mydef-comment {color: #888;}
    CSS: .mydef-label {color: #22f;}
    CSS: .mydef-keyword {color: #494;}
    CSS: .mydef-preproc {color: #844;}
    CSS: .mydef-include {color: #444; text-decoration: underline;}
    CSS: .mydef-quote {color: #a2a;}
    CSS: .mydef-macro {color: #494;}

#----------------------------------------------- 
subcode: precode
    <pre><code>
    PUSHDENT
    BLOCK
    POPDENT
    </code></pre>

#---------------------------------------- 
perlcode: codeprint
    my ($type, $codelist)
    $if $param=~/(\w+),\s*(\S+),\s*(.*?)\s*$/
        $type=$1
        $call grab_file, $2, $3
    $else
        $codelist=MyDef::compileutil::get_named_block("last_grab")
        $if $param=~/(\w+)/
            $type=$1
    $if ref($codelist) eq "ARRAY"
        push @$out, "<pre><code>"
        push @$out, "PUSHDENT"
        $foreach $t in @$codelist
            $t=~s/&#35;/#/g
            $t=~s/&(?!call)/&amp;/g
            $t=~s/</&lt;/g
	    $if $type eq "mydef"
		$call mydef_print
            push @$out, $t
        push @$out, "POPDENT"
        push @$out, "</code></pre>"

subcode: grab_file(f, name)
    my @t
    my $pat=$(name)
    my $flag
    $if open In, $(f) 
        $while <In>
            $if /^\#----\s*$pat\s*----/
                $flag=1
            $elif /^\#----.*----/
                $flag=0
            $elif $flag
                push @t, $_
        close In
    $while $t[-1]=~/^\s*$/
        pop @t
    $codelist=\@t

#---------------------------------------- 
subcode: global_pattern(name, p)
    $if $t=~/$(p)/
	my @plist=split /($(p))/, $t
	my @tlist
	$foreach $p in @plist
	    $if $p=~/^$(p)$/
		push @tlist, "<span class=\"mydef-$(name)\">$p</span>" 
	    $else
		push @tlist, $p
	$t=join('', @tlist)

subcode: mydef_print
    #print "mydef_print [$t]\n"
    $if $t!~/</ 
	$call global_pattern, quote, ".*?"
	$call global_pattern, macro, \$\(.*?\) 

    $(set:span=<span class=\"mydef-$1\">$2</span>)
    $if $t=~/^(\s*)((#|&#35;).*)/
	$t="$1$(span:comment, $2)"
    $elif $t=~/^(\s*)(page|\w+code):\s*(\w+)(.*)/
	$t="$1$(span:label, $2): $(span:label, $3)$4"
    $elif $t=~/^(\s*)(\$call|\$map|\&call)\s*(\w+)(.*)/
	$t="$1$(span:keyword, $2) <strong>$3</strong>$4"
    $elif $t=~/^(\s*)(CSS|include):\s*(.*)/
	$t="$1$(span:preproc, $2): $(span:include, $3)"
    $elif $t=~/^(\s*)\$(if|while|switch|for|elif|elsif|else|function)\b(.*)/
        $t="$1$(span:keyword,\$$2)$3"

subcode: sh_print
    $(set:span=<span class=\"mydef-$1\">$2</span>)
    $if $t=~/^\$ (.*)/
        $t="<span class=\"mydef-keyword\">\$ </span><b>$1</b>"
