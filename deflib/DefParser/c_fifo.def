# FIFO buffer
#     assuming the items are small and buffer of decent size
#     uses memmove instead of circular buffer

subcode: define_fifo(name, type)
    $struct($(name)) $(type) * buffer, n_size, n_start, n_end, n_eof
    $struct($(name)) int buffer_is_static

# -----------------------------------
# convention: use b as in buffer
# -----------------------------------
subcode: fifo_create(b, size)
    $allocate $(b)
    $allocate($(size)) $(b)->buffer
    $(b)->n_size=$(size)
    $(b)->n_end=0
    $(b)->buffer_is_static=0

subcode: fifo_create_static(b, buf, size, allocate)
    $(if:allocate=allocate)
        $allocate $(b)
    $(b)->buffer=$(buf)
    $(b)->n_size=$(size)
    #-- buffer is already filled
    $(b)->n_end=$(size)
    $call @on_fifo_create
    $(b)->buffer_is_static=1

subcode:: on_fifo_create
    $(b)->n_start=0
    $(b)->n_eof=0
#-----
subcode: fifo_delete(b)
    $if !$(b)->buffer_is_static
        free($(b)->buffer)
    free($(b))

# -----------------------------------
subcode: fifo_in(b, item)
    $call fifo_check_space, $(b), 1, sizeof(*($(b)->buffer))
    $(b)->buffer[$(b)->n_end] = $(item)
    $(b)->n_end++

subcode: fifo_out(b, n)
    $(b)->n_start+=$(n)

# -----------------------------------
subcode: fifo_copy(mem, size)
    $call fifo_check_space, $(b), $(size), 1
    memcpy($(b)->buffer, $(mem), $(size))
    $(b)->n_end+=$(size)

# -----------------------------------
subcode: fifo_check_space(b, more, typesize)
    $(set:space=$(b)->n_size-$(b)->n_end)
    $if $(space)<$(more)
        $if $(b)->n_start>0
            $call fifo_shift, $(b), $(typesize)
        $if $(space) <  $(more) + 1
            $call fifo_realloc, $(b), $(more), $(typesize)

subcode: fifo_shift(b, typesize)
    tn_size=$(b)->n_end-$(b)->n_start
    $if tn_size>0
        $(if:typesize=1)
            memmove($(b)->buffer, $(b)->buffer+$(b)->n_start, tn_size )
        $(else)
            memmove($(b)->buffer, $(b)->buffer+$(b)->n_start, tn_size*$(typesize) )
    $(b)->n_end-=$(b)->n_start
    # input_buffer.def (line, col) support
    $call @on_fifo_shift
    $(b)->n_start=0

subcode: fifo_realloc(b, more, typesize)
    tn_size=$(b)->n_end-$(b)->n_start + $(more) + 128
    $(if:typesize=1)
        $(b)->buffer=realloc($(b)->buffer, tn_size )
    $(else)
        $(b)->buffer=realloc($(b)->buffer, tn_size*$(typesize))
    $(b)->n_size=tn_size

