# e.g. @t = bases(10000, 60, 60, 24); print join(':', reverse @t), "\n"; --> 2:46:40
fncode: bases($n, @bases)
    my @t
    $foreach $b in @bases
        push @t, $n % $b
        $n = int($n/$b)
        $if $n<=0
            last
    $if $n>0
        push @t, $n
    return @t

# -- simple progress timing
fncode: get_time
    $global $time_start = time()
    my $t = time()-$time_start
    my @t
    $call get_seg, 60
    $call get_seg, 60
    $call get_seg, 60
    $if $t>0
        $call get_seg, 24
        return sprintf("%d day %02d:%02d:%02d", $t[3], $t[2], $t[1], $t[0])
    $else
        return sprintf("%02d:%02d:%02d", $t[2], $t[1], $t[0])

    subcode: get_seg(P)
        push @t, $t % $(P)
        $t = int($t/$(P))

fncode: json($v)
    $if ref($v) eq "HASH"
        my @tlist
        $foreach $k in sort keys %$v
            push @tlist, "\"$k\":".json($v->{$k})
        return '{'.join(',', @tlist).'}'
    $elif ref($v) eq "ARRAY"
        my @tlist
        $foreach $k in @$v
            push @tlist, json($k)
        return '['.join(',', @tlist).']'
    $elif $v eq "0" or $v!=0
        return $v
    $else
        return "\"$v\""

subcode: dump(v)
    print '    $(v)=', json($(v)), "\n"
