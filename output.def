include: macros_util/debug.def

subcode: output_main
    use MyDef::dumpout;
    package MyDef::$(pagename);

    my $debug;
    my $mode;
    my $out;
    my $page;
    $call @package_subs

    $sub get_interface
	return (\&init_page, \&parsecode, \&set_output, \&modeswitch, \&dumpout);

    $sub init_page
	($page)=@_;
	# ---- Set output file extension
	my $ext="$(ext)"
	$if $page->{type}
	    $ext=$page->{type};
	$call @init_page
	$page->{pageext}=$ext
	return ($ext, "$(init_mode)");

    $sub set_output
	$out = shift

    # ---- php has php,  html and js mode ----------
    $sub modeswitch
	($mode, $in)=@_;
	$call @modeswitch

    # ---- All specialized parsing goes here.
    $sub parsecode
	my $l=shift;
	$if $debug eq "parse"
	    $call dump_line, parsecode
	$if $l=~/^DEBUG (\w+)/
	    $if $1 eq "OFF"
		$debug=0
	    $else
		$debug=$1
	    return
	$elif $l=~/^NOOP/
	    return
	$call parsecode

    # ---- Final output, allows for 2nd pass translation
    $sub dumpout
	my ($f, $out)=@_;
	my $dump={out=>$out,f=>$f}
	$call @dumpout
	MyDef::dumpout::dumpout($dump);

    # ---- supporting subroutines ----
    $sub single_block($t1, $t2)
	push @$out, "$t1";
	push @$out, "INDENT";
	push @$out, "BLOCK";
	push @$out, "DEDENT";
	push @$out, "$t2";
	return "NEWBLOCK";

    $sub single_block_pre_post($t1, $t2, $pre, $post)
	push @$out, "$t1";
	push @$out, "INDENT";
	$if $pre
	    $foreach my $l in @$pre
		push @$out, $l
	push @$out, "BLOCK";
	$if $post
	    $foreach my $l in @$post
		push @$out, $l
	push @$out, "DEDENT";
	push @$out, "$t2";
	return "NEWBLOCK";

    $call @support_subs

    1;

subcode: parsecode
    push @$out, $l

