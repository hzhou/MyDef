include: output.def
include: macros_c/cfunctions.def

page: output_c, output_main
    type: pm
    output_dir: lib/MyDef
    ext: c
    init_mode: sub
    subcode: package_subs
	$call c_main
    subcode: init_page
	$call c_init
    subcode: parsecode
	$call check_text_includes
	$call c_parsecode
    subcode: dumpout
	# ----  Main Function -------------------
	$call c_main_function

	# ---- process_function ------------------------
	my $funclist=MyDef::dumpout::get_func_list()
	$foreach my $func in @$funclist
	    $call process_function_std

        # ---- Makefile -------------------------------
	$if $functions{"main"}
	    my $libstr;
	    $foreach $i in keys %includes
		$if $i=~/^lib(.*)/
		    $libstr.=" -l$1";
		$elif $i=~/math.h/
		    $libstr.=" -lm";
	    my $pagename=$page->{pagename}
	    my $ext=$page->{ext}
	    push @$f, "START_Makefile";
	    $call set_make_macro, CC, gcc
	    $call set_make_macro, CFLAGS, -
	    $call set_make_macro, INC, -
	    $call set_make_macro, LIB, -
	    push @$f, "\n"
	    push @$f, "$pagename: $pagename.$ext\n";
	    push @$f, "\t$\(CC) $\(CFLAGS) $\(INC) $\(LIB) \$@ \$<\n"
	    push @$f, "END_SUBFILE";

	# ---- Header stuff --------------------------
	unshift @$out, "\n/**** END GLOBAL INIT ****/\n";
	unshift @$out, "DUMP_STUB global_init";
	$call c_dump_init

subcode: set_make_macro(name, default)
    $if $page->{$(name)}
	push @$f, "$(name)=$page->{$(name)}\n"
    $(if:default!=-)
	$else
	    push @$f, "$(name)=$(default)\n"
