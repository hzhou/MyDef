subcode:: c_support_subs
    $sub infer_c_type
	my $val=shift;
	$if $debug eq "type"
	    print "infer_c_type: [$val]\n"
	$if $val=~/^[+-]?\d+\./
	    return "float"
	$elif $val=~/^[+-]?\d/
	    return "int"
	$elif $val=~/^"/
	    return "char *";
	$elif $val=~/^'/
	    return "char";
	$elif $val=~/^\((\w+)\)\w/
	    return $1
	$elif $val=~/(\w+)(.*)/
	    my $tail=$2;
	    my $type=get_var_type($1)
	    $if !$type
		$type=get_c_type($1)
	    # --
	    my $check_tail=1
	    $while $check_tail
		$check_tail=0
		$if $type=~/struct (\w+)/
		    $if $structs{$1}
			my $s_hash=$structs{$1}->{hash}
			$if $tail=~/^(->|\.)(\w+)/
			    $tail=$';
			    $type=$s_hash->{$2}
			    $check_tail=1
		    $else
			return;
		$if $type=~/\*\s*$/
		    $if $tail=~/^\[.*?\]/
			$tail=$';
			$type=~s/\s*\*\s*$//;
			$check_tail=1
	    return $type

    $sub get_c_type_word
	my $name=shift;
	$if $debug eq "type"
	    print "get_c_type_word: [$name] -> $type_prefix{$name}\n";
	$if $type_prefix{$name}
	    my $type=$type_prefix{$name}
	    return $type
	$elsif substr($name, 0, 1) eq "t"
	    return get_c_type_word(substr($name,1));
	$elsif substr($name, 0, 1) eq "p"
	    return get_c_type_word(substr($name,1)).'*';
	$elsif $name=~/^st(\w+)/
	    return "struct $1";
	$elif $name=~/^([a-z]+)/
	    $if $type_prefix{$1}
		my $type=$type_prefix{$1}
		$if $type_include{$type}
		    add_include($type_include{$type});
		return $type

    $sub get_c_type
	my $name=shift;
	my $check;
	my $type="void";
	$if $name=~/.*\.([a-zA-Z].+)/
	    #print "ctype: $name->$1\n";
	    $name=$1;
	$if $type_name{$name}
	    $type= $type_name{$name};
	$elsif $name=~/(\w+)_(.*)/
	    my $t1=$1;
	    my $t2=$2;
	    my $t=get_c_type_word($t1);
	    $if !$t
		$if $t1=~/^\w+$/
		    $type=get_c_type_word($t2);
	    $elsif $t=~/^\*/
		$type=get_c_type_word($t2).$t;
	    $else
		$type=$t;
	$else
	    $type=get_c_type_word($name);

	$if !$type
	    $type="void";
	$elsif $type =~/^\*/
	    $type="void";
	# --
	$if $type_include{$type}
	    add_include($type_include{$type});
	# --
	$while $name=~/\[.*?\]/g
	    $type=pointer_type($type);
	# --
	$if $debug eq "type"
	    print "get_c_type:   $name: $type\n";
	return $type;

    $sub pointer_type
	my ($t)=@_;
	$t=~s/\s*\*\s*$//;
	return $t;

    $sub get_name_type
	my $t=shift
	$if $t=~/(\S.*\S)\s+(\S+)/
	    return ($1, $2)
	$else
	    return (get_c_type($t), $t)
    # --------------------------------------------
    $sub get_c_fmt 
	my $name=shift;
	my $type=get_var_type($name);
	$if $type eq "int"
	    return "%d";
	$elsif $type eq "char"
	    return "%c";
	$elsif $type eq "char *"
	    return "%s";
