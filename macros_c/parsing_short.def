subcode: fmt_print
    $includes{"<stdio.h>"}=1;
    my @fmt=split /(\$[0-9a-zA-Z_\[\]]+)/, $l;
    my @var;
    for(my $j=0; $j<@fmt; $j++){
	if($fmt[$j]=~/^\$(\w+)(.*)/){
	    push @var, "$1$2";
	    $fmt[$j]=get_c_fmt($1);
	}
    }
    $if @var
	push @$out, "printf(\"".join('', @fmt)."\", ".join(', ', @var).");";
    $else
	push @$out, "printf(\"$l\");";

subcode: check_termination
    if($l=~/^\s*$/){
    }
    elsif($l=~/(for|while|if|else if)\s*\(.*\)\s*$/){
    }
    elsif($l!~/[:\{\};]\s*$/){
	$l.=";";
    }

subcode: check_exponential
    # x^4
    $while $l=~/\^([234])/
	my $t_p=$1;
	my $t_tail=$';
	my ($t_head, $t_exp)=last_exp($`);
	my $t_trunk="$t_exp*" x ($t_p-1);
	$t_trunk.=$t_exp;
	$l="$t_head($t_trunk)$t_tail";

subcode: check_functioncall
    $if $l=~/^(\w+)\s+(.*)$/
	# print "check_functioncall: $1\n"
	$if $functions{$1} or $stock_functions{$1}
	    my $fn=$1;
	    my $t=$2;
	    $t=~s/;\s*$//;
	    $t=~s/\s+$//;
	    $l="$fn($t);";

