subcode: package_globals
    my $debug;
    ##########################################
    $call includes
    $call defines
    $call enums
    $call structs
    $call global
    our %functions;
    our @function_declare_list;
    our %var_type_cast;
    our @declare_list

    our @initcodes;

    # ----
    my %function_flags;
    sub set_function_flag {
	my ($k, $v)=@_;
	$function_flags{$k}=$v;
    }
    #----
    our @func_var_hooks;
    our @func_extra_init;
    our @func_extra_release;
    our @func_pre_assign;
    our @func_post_assign;
    #----
    ############################################
    our %fntype;
    $call type_hashes

subcode: includes
    our %includes
    $sub add_include 
	my $l=shift;
	my @tlist=split /,/, $l;
	$foreach my $t in @tlist
	    $if $t=~/(\S+)/
		$includes{"<$1>"}=1;

subcode: defines
    our $define_id_base=1000;
    our %defines;

subcode: enums
    our %enums;
    our @enum_list;

subcode: global
    # -- global variables
    our $global_type={};
    our $global_flag={};
    our @global_list;

subcode: structs
    our %structs;
    our @struct_list;

subcode: type_hashes
    our %type_name=(
	c=>"char",
	i=>"int",
	j=>"int",
	k=>"int",
	m=>"int",
	n=>"int",
	f=>"float",
	d=>"double",
	count=>"int",
    );
    our %type_prefix=(
	n=>"int",
	ui=>"unsigned int",
	c=>"char",
	"uc"=>"unsigned char",
	b=>"int",
	s=>"char *",
	v=>"unsigned char *",
	f=>"float",
	d=>"double",
	"time"=>"time_t",
	"file"=>"FILE *",
	"strlen"=>"STRLEN",
	"has"=>"int",
	"is"=>"int",
    );

    our %stock_functions=(
	"printf"=>1,
    );

    my %lib_include=(
	glib=>"glib.h",
    );

    my %type_include=(
	time_t=>"time.h",
    );

    my %text_include=(
	"printf|perror"=>"stdio.h",
	"malloc"=>"stdlib.h",
	"str(len|dup|cpy)"=>"string.h",
	"\\bopen\\("=>"fcntl.h",
	"sin|cos|sqrt"=>"math.h",
	"fstat"=>"sys/stat.h",
    );

    sub register_type_prefix {
	my ($k, $v)=@_;
	$type_prefix{$k}=$v;
    }

