# ---- h name list -----------------
subcode:: c_init
    # $h_hash is hash of list of header contents
    $global %h_hash
    %h_hash=()

subcode: write_h(name, param)
    my $tlist=$h_hash{$(name)}
    $if !$tlist
	$tlist=[]
	$h_hash{$(name)}=$tlist
    push @$tlist, split(/,\s*/, $(param))

subcode: dump_h_files
    my $outdir=$page->{outdir}
    $while my ($name, $content)=each %h_hash
	my %ahash
	my %ghash=("include"=>[], "define"=>[],"struct"=>[],"function"=>[],"global"=>[])
	$foreach $t in @$content
	    $if !$ahash{$t}
		$if $t=~/^(\w+)-(.*)/
		    push @{$ghash{$1}}, $2
		$ahash{$t}=1

	my @buf
	my $dump_out=\@buf
	$foreach $k in @{$ghash{"include"}}
	    push @$dump_out, "#include $k\n";
	$foreach $k in @{$ghash{"define"}}
	    $call dump_define, $k
	$foreach $k in @{$ghash{"struct"}}
	    $call dump_struct
	$foreach $k in @{$ghash{"typedef"}}
	    $call dump_typedef, $k
	$foreach $k in @{$ghash{"function"}}
	    $call dump_function_declare, $k
	push @buf, "\n"
	$foreach $k in @{$ghash{"global"}}
	    my $var=$global_hash->{$k}
	    my $type=$var->{type}
	    $if $type=~/\*$/ and $var->{array}
		$type=~s/\s*\*$//
		push @buf, "extern $type $k\[];\n"
	    $else
		push @buf, "extern $type $k;\n"

	my $out_h="$outdir/$name.h"
	print "  ---> $out_h\n"
	open Out, ">$out_h" or die "can't write $out_h\n"
	$foreach $l in @buf
	    print Out $l
	close Out

# -----------------------------------------
subcode: check_autoload_h
    $if $MyDef::compileutil::in_autoload
	$call check_autoload_h_direct
    $else
	$autoload=undef
	$autoload_h=0

subcode: check_autoload_h_direct
    $global $autoload, $autoload_h
    $autoload=undef
    $autoload_h=0
    $if $page->{autoload} eq "write_h"
	$if !$h_hash{"autoload"}
	    $autoload=[]
	    $h_hash{"autoload"}=$autoload
	$else
	    $autoload=$h_hash{"autoload"}
    $elif $page->{autoload} eq "h"
	$autoload_h=1

subcode: add_to_autoload_h(key)
    $if $autoload
	push @$autoload, $(key)

