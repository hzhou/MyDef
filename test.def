subcode: setup
    $ENV{MYDEFLIB}="../deflib";
    $ENV{PERL5LIB}="../MyDef/blib/lib";

    $if !-d "out"
        mkdir "out" or die "Can't mkdir out\n";

    my $yellow="\033[33;1m";
    my $normal="\033[0m";

page: make_cmp
    output_dir: ./tests

    $if !-d "cmp"
        mkdir "cmp"
    my @files = glob("*.def")
    $foreach $f in @files
        $if $f=~/(([a-z0-9]+)_.*)\.def$/
            my $name=$1
            my $module=$2
            my $cmd= "mydef_page $f -m$module -ocmp";
            $print $cmd
            system $cmd

            chdir "cmp"
            my @all = glob("test*")
            $foreach $a in @all
                rename $a, "$name-$a"
            chdir ".."

page: run_test
    output_dir: ./tests

    $call setup
    my $f=$ARGV[0];
    $call scan_f

    $if $f=~/(([a-z0-9]+)_.*)\.def$/
        my $name=$1
        my $module=$2
        unlink "out/Makefile";
        my $cmd= "perl ../MyDef/script/mydef_page $f -m$module -oout";
        print "$cmd \n";
        system $cmd;
        chdir "out";
        $map test, c, xs, win32, php, perl, www
        $else
            print "test.pl phase 2: unhandled module type: [$module]\n"

        my @all=glob("../cmp/$name-*")
        $foreach $a in @all
            $if $a=~/cmp\/$name-(.*)/
                $print diff $1 $a
                system "diff $1 $a"

    subcode: scan_f
        my @test_list
        &call open_r, $f
            $if /^#\s*TEST:\s*(.*)/
                push @test_list, $1

    subcode: test(module)
        $case $module eq "$(module)"
            $call test_$(module)

    subcode: test_www
        print "$yellow*** Dumping test.html ***$normal\n"
        system "cat test.html"

    subcode: test_c
        print "$yellow*** Compiling test.c ***$normal\n";
        chdir "out";
        unlink "test";
        #system "make";
        my $lib
        &call open_r, test.c
            $if /^\/\*\s*link: (.*)\*\//
                $lib=$1
        my $cmd="gcc -g test.c $lib -o test"
        $print "    $cmd"
        system $cmd
        $if -f "test"
            print "$yellow*** Testing output ***$normal\n";
            system "./test";

    subcode: test_xs
        $if !-d "test_xs"
            print "$yellow*** Setting up h2xs ***$normal\n";
            system "h2xs -n test_xs"; 
        system "cp test_xs.xs test_xs/";

        chdir "test_xs";
        print "$yellow*** Compiling out.xs ***$normal\n";
        system "rm -rf blib"
        system "perl Makefile.PL";
        system "make";

        $if @test_list 
            print "$yellow*** Testing out.pm ***$normal\n";
            use lib "./blib/arch/auto/test_xs";
            require "blib/lib/test_xs.pm"
            $foreach $t in @test_list
                print "  $yellow* $t$normal\n"
                eval($t)
                warn $@ if $@

    subcode: test_win32
        $if !-d "test_win32"
            print "$yellow*** Setting up for microsoft visual studio ***$normal\n";
            mkdir "test_win32";
            open Out, ">test_win32/make.bat";
            print Out "cl test.c user32.lib gdi32.lib comdlg32.lib\n";
            close Out;
        system "cp test.c test_win32/";
        print "To continue, compile under windows in test_win32/ \n"

    subcode: test_php
        print "$yellow*** Dump test.php ***$normal\n";
        system "cat test.php"

    subcode: test_perl
        print "$yellow*** perl test.pl ***$normal\n";
        system "perl test.pl"

