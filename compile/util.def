
subcode:: support_subs
    $sub get_cur_code
	return ($block_stack[-1]->{code}, $cur_file, $cur_line)

    $sub get_def
	my ($name)=@_;
	$for $i=$#$deflist:-1:-1
	    $if defined $deflist->[$i]->{$name}
		return $deflist->[$i]->{$name}
	return undef;

    $sub get_def_attr
	my ($name, $attr)=@_;
	$for $i=$#$deflist:-1:-1
	    my $t=$deflist->[$i]->{$name}
	    $if $t and $t->{$attr}
		return $t->{$attr}
	return undef;

# --------------------------------
subcode:: package_global	
    our %named_blocks;   # $(block: name)

    $sub get_named_block
	my $name=shift
	$if $name eq "_post"
	    my $cur_idx=$block_stack[-1]->{eindex}
	    $name="block$cur_idx\_post"
	$if !$named_blocks{$name}
	    $named_blocks{$name}=[]
	return $named_blocks{$name}

subcode: parse_named_block
    my $subblock=grabblock($block, \$lindex);
    my $output=get_named_block($name)

    my $temp=$out;
    set_output($output)
    #$f_parse->("SCOPE: $name");
    parseblock({source=>$subblock, name=>"block:$name"})
    #$f_parse->("SCOPE: NONE");
    set_output($temp)

subcode: dump_deflist
    $for my $i=0;$i<=$#$deflist;$i++
	print "DUMP DEFLIST $i:\n"
	my $h=$deflist->[$i]
	$foreach $k in keys(%$h)
	    print "    $k: $h->{$k}\n"

###########################################################
subcode:: support_subs
    # MODES
    $sub modepush($mode)
	push @$modelist, $mode;
	$f_modeswitch->($mode, 1);

    $sub modepop
	pop @$modelist
	my $mode=$modelist->[-1];
	$f_modeswitch->($mode, 0);

    $sub grabblock($block, $index_ref)
	my @sub;
	my $indent;
	my $lindex=$$index_ref;
	$if $block->[$lindex] ne "SOURCE_INDENT"
	    return \@sub;
	$else
	    $indent=1;
	    $lindex++;
	$while $lindex<@$block
	    $if $block->[$lindex] eq "SOURCE_DEDENT"
		$indent-- if $indent>0;
		$if $indent==0
		    $lindex++;
		    last;
	    $if $block->[$lindex] eq "SOURCE_INDENT" 
		$indent++; 
	    push @sub, $block->[$lindex];
	    $lindex++;
	$$index_ref=$lindex;
	#foreach my $l(@sub){print "grabblock: [$l]\n";}
	return \@sub;



